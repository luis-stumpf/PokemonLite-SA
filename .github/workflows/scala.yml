name: Scala CI

on: [ push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '19'
      - name: compile
        run: sbt compile 

  codacy-coverage-reporter:
    runs-on: ubuntu-latest
    name: codacy-coverage-reporter
    steps:
      - uses: actions/checkout@v2
      - name: Build Project and export Coverage to Codacity
        run: sbt clean jacocoAggregate
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: target/scala-3.4.1/jacoco/report/aggregate/jacoco.xml

  publish:
    name: Publish packages
    runs-on: ubuntu-latest
    needs: build
    steps:
       # fetch latest changes before the stufff below is done
      - name: Checkout
        uses: actions/checkout@v3
        #with: // only the latest changegs
         # ref: ${{ github.head_ref }}
          #fetch-depth: 0
      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt' # temurin ?
      # so we know the code version (important for other workflow steps below)
      - name: Git Version
        id: version
        uses: codacy/git-version@2.7.1
        with:
          minor-identifier: "#minor"
          major-identifier: "#major"

      - name: Save versions
        run: |
          echo "LATEST_VERSION=${{ steps.version.outputs.version }}" >> $GITHUB_ENV
          echo "PREVIOUS_VERSION=${{ steps.version.outputs.previous-version }}" >> $GITHUB_ENV

      - name: Compare versions
        run: |
          echo ${{ env.PREVIOUS_VERSION }} --> ${{ env.LATEST_VERSION }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io # https://ghcr.io  # docker registry is outdatet, we use container registry now https://docs.github.com/de/packages/working-with-a-github-packages-registry/working-with-the-docker-registry
          username: ${{ secrets.GITHUB_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub # https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.GITHUB_USERNAME }} # configure github secrets in github repo settings/secretsydfxdsre3wr4321^ WSEDRFTGJKNM ;
          password:  ${{ secrets.DOCKERHUB_TOKEN }} # maybe use of githubsecrets

      - name: Publish
        if: ${{ env.LATEST_VERSION != '' && env.PREVIOUS_VERSION != env.LATEST_VERSION }}
        run: sbt Docker/publish
        env:
          LATEST_VERSION: ${{ env.LATEST_VERSION }}
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

      #- name: Extract metadata (tags, labels) for Docker
       # id: meta
        #uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      #  with:
       #   images: |
        #    my-docker-hub-namespace/my-docker-hub-repository
         #   ghcr.io/${{ github.repository }}

      #- name: Build and push Docker images
       # uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        #with:
         # context: .
         # push: true
          #tags: ${{ steps.meta.outputs.tags }}
          #labels: ${{ steps.meta.outputs.labels }

     # - name: Publish Gui
      #  uses: docker/build-push-action@v4
       # with:
        #  context: ./gui
         # file: ./gui/Dockerfile-local
          #push: true
          #tags: xxx/gui:latest,xxx/gui:${{ env.LATEST_VERSION }}